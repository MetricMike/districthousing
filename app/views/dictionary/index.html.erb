<div class="pdf-guide">

<h2>Field Name Dictionary</h2>

<p>
  PDFs used with District Housing must be labeled correctly, or the forms will not be filled.
  This guide is a dictionary of all the kinds of field names that are supported for form filling.
</p>

<h3>Information about people</h3>

<p>
  Here, we will list some basic field names for information about the applicant.
</p>

<%= render "table", field_name_descriptions: [
  [ "Name", "Full name" ],
  [ "FirstName", "First name"],
  [ "MiddleInitial", "Middle initial"],
  [ "MiddleName", "Middle name"],
  [ "LastName", "Last name"],
  [ "SSN", "Social security number"],
  [ "DOB", "Date of birth in MM/DD/YYYY format"],
  [ "DOBMM", "Date of birth two-digit month"],
  [ "DOBDD", "Date of birth two-digit day"],
  [ "DOBYYYY", "Date of birth four-digit year"],
  [ "Age", "Age"],
  [ "BirthState", "State of birth"],
  [ "BirthCity", "City of birth"],
  [ "Nationality", "Nationality/citizenship"],
  [ "USCitizen", "Is the person a US Citizen?"],
  [ "Gender", "The person's gender"],
  [ "GenderInitial", "First letter of gender"],
  [ "Mail", "Applicant's mailing address"],
  [ "Phone", "Applicant's phone number"],
  [ "HomePhone", "Applicant's home phone number"],
  [ "WorkPhone", "Applicant's work phone number"],
  [ "CellPhone", "Applicant's cell phone number"],
  [ "Email", "Applicant's e-mail address"],
  [ "Address", "Applicant's current residential address"],
  [ "MaritalStatus", "Applicant's marital status (Single, Married, Divorced, Widowed)"],
  [ "Occupation", "Applicant's occupation"],
  [ "DriverLicense", "Driver's license number"],
  [ "DriverLicenseState", "Driver's license state"],
  [ "Relationship", "Relationship to the applicant"],
] %>

<h4>Person prefixes</h4>

<p>
  Personal field names can be prefixed with certain patterns to change which person it refers to.
  For example, you can get personal information for the first household member with the
  <code>HH1</code> prefix, as this table shows:
</p>

<%= render "table", field_name_descriptions: [
  [ "HH1Name", "First household member's full name" ],
  [ "HH1Gender", "First household member's gender"],
  [ "HH1Mail", "First household member's mailing address"],
  [ "HH1Phone", "First household member's phone number"],
  [ "HH1Email", "First household member's e-mail address"],
  [ "HH1Address", "First household member's current residential address"],
  [ "HH1Occupation", "First household member's occupation"],
] %>

<p>Increment the prefix number to select the next person of that type:</p>

<%= render "table", field_name_descriptions: [
  [ "HH1Name", "First household member's full name" ],
  [ "HH2Name", "Second household member's full name" ],
  [ "HH3Name", "Third household member's full name" ],
] %>

<p>
  The available person prefixes are:
</p>

<%= render "prefix_table", prefix_descriptions: [
  [ "LL", "Landlord, starting with current. Matches <code>Address</code> of the same number" ],
  [ "HH", "Household member other than the applicant" ],
] %>

<h3>Race and Ethnicity </h3>

<%= render "table", field_name_descriptions: [
  [ "RaceBlackT", "Applicant race identity:Black yes or no" ],
  [ "RaceWhiteT", "Applicant race identity:White yes or no" ],
  [ "RaceNativeAmericanT", "Applicant race identity:AmericanIndian yes or no" ],
  [ "RaceAsianT", "Applicant race identity:Asian yes or no" ],
  [ "RacePacificIslanderT", "Race is Hawaiian or other Pacific Islander" ],
  [ "RaceOtherT", "Race is \"Other\"" ],
  [ "RaceDeclineT", "Applicant race identity:Do not wish to Answer yes or no" ],
  [ "EthnicityHispanicT", "Applicant race identity:Hispanic yes or no" ],
  [ "EthnicityNonHispanicT", "Applicant race identity:NonHispanic yes or no" ],
  [ "EthnicityDeclineT", "Applicant race identity:No Answer yes or no" ],
] %>

<h3>Addresses</h3>

<p>
  Addresses can be suffixed with address components to get just that part of the address.  For example:
</p>

<%= render "table", field_name_descriptions: [
  [ "Address", "Full address" ],
  [ "AddressStreet", "Street address" ],
  [ "AddressCity", "City" ],
  [ "AddressState", "State" ],
  [ "AddressZip", "Zip code" ],
  [ "AddressApt", "Apartment" ],
  [ "AddressStart", "Start date of this address" ],
  [ "AddressEnd", "Start date of this address" ],
  [ "AddressLeaseExpDate", "Date that the lease expires at this address" ],
  [ "AddressRent", "Rent amount in USD at this address" ],
  [ "Mail", "Mailing full address" ],
  [ "MailStreet", "Mailing street address" ],
  [ "MailCity", "Mailing city" ],
  [ "MailState", "Mailing state" ],
  [ "MailZip", "Mailing zip code" ],
  [ "MailApt", "Mailing apartment" ],
] %>

<p>
  Addresses can be numbered to indicate previous residence addresses.  <code>Address1</code> is the same
  as <code>Address</code>, <code>Address2</code> is the first previous residence address, and so on.
  Component suffixes work for previous addresses the same way they do for the current address.
</p>

<%= render "table", field_name_descriptions: [
  [ "Address", "Current residence address" ],
  [ "Address1", "Current residence address" ],
  [ "Address1City", "Current residence address city" ],
  [ "Address2", "First previous residence address" ],
  [ "Address2State", "First previous residence address state" ],
  [ "Address3", "Second previous residence address" ],
  [ "Address4", "Third previous residence address" ],
] %>

<p>
  You can use person prefixes with addresses.
</p>

<%= render "table", field_name_descriptions: [
  [ "Address", "Current residence address of applicant" ],
  [ "HH1AddressZip", "First household member's address zip code" ],
  [ "HH2AddressStreet", "Second household member's street address" ],
  [ "LL1Address", "Current landlord's address" ],
  [ "LL2AddressState", "Previous landlord's address state" ],
] %>

<h3>Income</h3>
<%= render "table", field_name_descriptions: [
  [ "IncomeMain", "" ],  
  [ "IncomeMainAmt", ""], 
  [ "IncomeAddlSS",  "Social Security Benefits" ],
  [ "IncomeAddlDB",  "Disability Benefits" ],
  [ "IncomeAddlRB",  "Retirement Benefits" ],
  [ "IncomeAddlMI",  "Military Income" ],
  [ "IncomeAddlPT",  "Part-time Employment Income" ],
  [ "IncomeAddlOT",  "Overtime Income" ],
  [ "IncomeAddlC", "Commissions" ],
  [ "IncomeAddlCS",  "Child Support" ],
  [ "IncomeAddlAssets", "Assets Income" ],
  [ "IncomeAddlGA",  "Government Assistance" ],
  [ "IncomeAddlSelfEmp", "Self Employment Income" ],
  [ "IncomeAddlGift",  "Cash Gifts" ],
  [ "IncomeAddlWC",  "Worker's Compensation" ],
  [ "IncomeAddlUI",  "Unemployment Income" ],
  [ "IncomeAddlSev",  "Severance" ],
  [ "IncomeAddlIns", "Insurance Income" ],
  [ "IncomeAddlAl",  "Alimony" ],
  [ "IncomeAddlP", "Pension" ],
  [ "IncomeAddlVB",  "Veterans Benefits" ],
  [ "IncomeAddlLot", "Lottery" ],
  [ "IncomeAddlLI",  "Life Insurance Income" ],
  [ "IncomeAddlRI",  "Rental Income" ],
  [ "IncomeAddlStock", "Stock Income" ],
  [ "IncomeAddlTF",  "Trust Fund Income" ],
  [ "IncomeAddlSch", "Scolarship" ]
] %>

<h3>Employment</h3>

<%= render "table", field_name_descriptions: [
  [ "EmploymentStatus", "" ],
  [ "CurrJobTitle", "" ],
  [ "CurrJobStartDate", "" ],
  [ "CurJobEndDate", "" ],
  [ "CurrEmployer", "" ],
  [ "CurrJobAddLine1", "" ],
  [ "CurrJobAddLine2", "" ],
  [ "CurrJobAddCity", "" ],
  [ "CurrJobAddState", "" ],
  [ "CurrJobAddZip", "" ],
  [ "CurrJobPhone", "" ],
  [ "CurrJobTitle", "" ],
  [ "CurrJobStartDate", "" ],
  [ "CurJobEndDate", "" ],
  [ "CurrEmployer", "" ],
  [ "PrevJob1AddLine1", "" ],
  [ "PrevJob1AddLine2", "" ],
  [ "PrevJob1AddCity", "" ],
  [ "PrevJob1AddState", "" ],
  [ "PrevJob1AddZip", "" ],
  [ "PrevJob1Phone", "" ],
  [ "CurrJobTitle", "" ],
  [ "PrevJob2StartDate", "" ],
  [ "CurJobEndDate", "" ],
  [ "CurrEmployer", "" ],
  [ "PrevJob2AddLine1", "" ],
  [ "PrevJob2AddLine2", "" ],
  [ "PrevJob2AddCity", "" ],
  [ "PrevJob2AddState", "" ],
  [ "PrevJob2AddZip", "" ],
  [ "PrevJob2Phone", "" ],
] %>

<h3>Yes/No values</h3>

<p>
  Some forms ask for personal information in a yes/no question.  In general, personal
  fields can be suffixed with YN to produce either "Y" or "N" as the field value.  A
  field suffixed with "YesNo" will produce either "Yes" or "No".
</p>

<p>
  When there are more than two states, you can suffix a field name with the
  state you're interested in, followed by "YN" or "YesNo".
</p>

<p>
  The following table should clarify.
</p>

<%= render "table", field_name_descriptions: [
  [ "StudentStatus", "Description of student status" ],
  [ "StudentStatusFullTimeYN", "Y if full-time, N if part-time or not a student" ],
  [ "StudentStatusYN", "Y if full-time or part-time, N if not a student" ],
  [ "MarriedYN", "Y if married, N if not" ],
  [ "MarriedYesNo", "Yes if married, No if not" ],
] %>

<h3>Tickboxes</h3>

<p>
  Tickboxes should be suffixed with "TickYes" or "TickNo".
</p>

<%= render "table", field_name_descriptions: [
  [ "MarriedTickYes", "Ticked if married, empty if not" ],
  [ "MarriedTickNo", "Empty if married, ticked if not" ],
  [ "USCitizenTickYes", "Ticked if US Citizen, empty if not" ]
] %>

</div>
